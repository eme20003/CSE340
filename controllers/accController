const utilities = require("../utilities/")
const accountModel = require("../models/account-model")
const addClassificationModel = require("../models/add-classification-model")
const addInventoryModel = require("../models/add-inventory-model")

async function buildLogin(req, res, next){
    let nav = await utilities.getNav()
    console.log(grid);
    res.render("account/login", {
        title: "Login",
        nav,
    })
}

async function buildRegister(req, res, next) {
    let nav = await utilities.getNav()
    res.render("account/register", {
      title: "Register",
      nav,
      errors: null,       
    })
  }

/* Classification */

async function buildClassification(req, res, next){
    let nav = await utilities.getNav()

    const { classification_name } = req.body
  
    const regResult = await addClassificationModel.registerAddClassification(
      classification_name
    )

    res.render("inventory/add-classification", {
        title: "Add Classification",
        nav,
        errors: null,
    })
}

/* Inventory */

async function buildInventory(req, res, next){
    let nav = await utilities.getNav()

    const { inv_make, inv_model, inv_year, inv_description, inv_image, inv_thumbnail, inv_price, inv_miles, inv_color } = req.body
  
    const regResult = await addInventoryModel.registerAddInventory(
        inv_make, 
        inv_model, 
        inv_year, 
        inv_description, 
        inv_image, 
        inv_thumbnail, 
        inv_price, 
        inv_miles, 
        inv_color
    )
    res.render("inventory/add-inventory", {
        title: "Add Inventory",
        nav,
        errors: null,
    })
}

async function buildManagement(req, res, next){
    let nav = await utilities.getNav()
    res.render("inventory/management", {
        title: "Management",
        nav,
        errors: null,
    })
}

/* ****************************************
*  Process Registration
* *************************************** */
async function registerAccount(req, res) {
    let nav = await utilities.getNav()
    const { account_firstname, account_lastname, account_email, account_password } = req.body
  
    const regResult = await accountModel.registerAccount(
      account_firstname,
      account_lastname,
      account_email,
      account_password
    )
  
    if (regResult) {
      req.flash(
        "notice",
        `Congratulations, you\'re registered ${account_firstname}. Please log in.`
      )
      res.status(201).render("account/login", {
        title: "Login",
        nav,


      })
    } else {
      req.flash("notice", "Sorry, the registration failed.")
      res.status(501).render("account/register", {
        title: "Registration",
        nav,
        errors: null,
      })
    }
  }

  async function registerClassification(req, res) {
    let nav = await utilities.getNav()
    const { account_firstname, account_lastname, account_email, account_password } = req.body
  
    const regResult = await addClassificationModel.registerAddClassification(
      classification_name
    )
  
    if (regResult) {
      req.flash(
        "notice",
        `Congratulations, you\'re registered ${classification_name}!`
      )
      res.status(201).render("inventory/add-classification", {
        title: "Classification",
        nav,
      })
    } else {
      req.flash("notice", "Sorry, the registration failed.")
      res.status(501).render("inventory/add-classification", {
        title: "Classification",
        nav,
        errors: null,
      })
    }
  }

  async function registerInventory(req, res) {
    let nav = await utilities.getNav()
    const { inv_make, inv_model, inv_year, inv_description, inv_image, inv_thumbnail, inv_price, inv_miles, inv_color } = req.body
  
    const regResult = await addClassificationModel.registerAddClassification(
      inv_make, 
      inv_model, 
      inv_year, 
      inv_description, 
      inv_image, 
      inv_thumbnail, 
      inv_price, 
      inv_miles, 
      inv_color
    )
  
    if (regResult) {
      req.flash(
        "notice",
        `Congratulations, you\'re registered ${inv_make}!`
      )
      res.status(201).render("inventory/add-inventory", {
        title: "Inventory",
        nav,
      })
    } else {
      req.flash("notice", "Sorry, the registration failed.")
      res.status(501).render("ainventory/add-inventory", {
        title: "Inventory",
        nav,
        errors: null,
      })
    }
  }

module.exports = {buildLogin, buildRegister, registerAccount, buildClassification, buildInventory, buildManagement, registerClassification, registerInventory}